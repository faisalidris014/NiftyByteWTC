name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      PLAYWRIGHT_SKIP: 1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Security audit
        run: npm audit --audit-level=high

      - name: Run unit & integration tests with coverage
        run: npm run test:coverage -- --watchAll=false

      - name: Run Playwright smoke tests (skipped if browsers unavailable)
        run: npm run test:e2e

      - name: Upload coverage artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: coverage-lcov
          path: coverage/lcov.info

  build:
    runs-on: windows-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Package for distribution
        run: npm run dist:win-msi

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-troubleshooting-companion
          path: release/

  release:
    runs-on: windows-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: windows-troubleshooting-companion

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.exe
            *.msi
            *.blockmap
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
